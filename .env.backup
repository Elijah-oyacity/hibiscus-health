# Rename this file to .env and fill in your actual credentials
 
# Database (e.g., Vercel Postgres, Neon, Supabase)
# DATABASE_URL="postgresql://user:password@host:port/database?sslmode=require"
 
# # Auth.js v5
# # Generate with: openssl rand -base64 32
# AUTH_SECRET="your-super-secure-auth-secret-here"
# AUTH_URL="http://localhost:3000" # Update for production
 
# # Google Provider (Get from Google Cloud Console)
# AUTH_GOOGLE_ID=""
# AUTH_GOOGLE_SECRET=""
 
# # Stripe (Get from Stripe Dashboard)
# STRIPE_PUBLISHABLE_KEY=""
# STRIPE_SECRET_KEY=""
# STRIPE_WEBHOOK_SECRET="" # For verifying webhook events
 
# Optional: Sanity CMS (if you choose to use it)
# NEXT_PUBLIC_SANITY_PROJECT_ID=""
# NEXT_PUBLIC_SANITY_DATASET="production"
# SANITY_API_TOKEN="" # For write operations or private datasets
 
 
# ************************************************************************************************
 
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema
 
# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings
 
 
# Connect to Supabase via connection pooling
# DATABASE_URL="postgresql://postgres.lejerkpsmvmqyotdbjsr:Pbt6LUnBxfvlGHl6@aws-0-eu-central-1.pooler.supabase.com:6543/postgres?pgbouncer=true"
 
# # Direct connection to the database. Used for migrations
# DIRECT_URL="postgresql://postgres.lejerkpsmvmqyotdbjsr:Pbt6LUnBxfvlGHl6@aws-0-eu-central-1.pooler.supabase.com:5432/postgres"
 
 
AUTH_URL="http://localhost:3000"
 
# DATABASE_URL="postgresql://postgres:Pbt6LUnBxfvlGHl6@db.lejerkpsmvmqyotdbjsr.supabase.co:5432/postgres"
# DATABASE_URL="postgresql://postgres:Pbt6LUnBxfvlGHl6@db.lejerkpsmvmqyotdbjsr.supabase.co:5432/postgres"
 
 
# Connect to Supabase via connection pooling
DATABASE_URL="postgresql://postgres.lejerkpsmvmqyotdbjsr:WGDjhD9XUvqwXdNb@aws-0-eu-central-1.pooler.supabase.com:5432/postgres"
# postgresql://postgres.lejerkpsmvmqyotdbjsr:WGDjhD9XUvqwXdNb@aws-0-eu-central-1.pooler.supabase.com:6543/postgres
 
# postgresql://postgres.lejerkpsmvmqyotdbjsr:WGDjhD9XUvqwXdNb@aws-0-eu-central-1.pooler.supabase.com:5432/postgres
 
# Direct connection to the database. Used for migrations
# DIRECT_URL="postgresql://postgres.lejerkpsmvmqyotdbjsr:Pbt6LUnBxfvlGHl6@aws-0-eu-central-1.pooler.supabase.com:5432/postgres"
DIRECT_URL="postgresql://postgres:WGDjhD9XUvqwXdNb@db.lejerkpsmvmqyotdbjsr.supabase.co:5432/postgres"
# postgresql://postgres:[YOUR-PASSWORD]@db.lejerkpsmvmqyotdbjsr.supabase.co:5432/postgres
 
# In .env file
AUTH_SECRET="5S1fJ1VntYAg5m7oqZtIKW62TJtPu1saanLFO+/2+CA=" # Generate with: openssl rand -base64 32
# AUTH_URL="http://localhost:3000/api/auth" # Or your production URL
 
# Google Provider
# AUTH_GOOGLE_ID="1070066955715-230kpuc3gcumril53mpae1fkkrqjoptm.apps.googleusercontent.com"
# AUTH_GOOGLE_SECRET="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"
 
GOOGLE_CLIENT_ID='1070066955715-230kpuc3gcumril53mpae1fkkrqjoptm.apps.googleusercontent.com'
GOOGLE_CLIENT_SECRET='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'
 
# Resend Provider (Optional)
# AUTH_RESEND_KEY="your_resend_api_key"
 
# Database URL (already added by Prisma init)
# DATABASE_URL="..."
 
# .env
STRIPE_PUBLISHABLE_KEY="pk_test_51RESrhQ5AgnjVXhKNvBJZkPODhMM4CtkKTeSS8zIZeUuMSgjBR8ajmfNPxCLTsEBO9aAEJDbfTBCvDpbzoc1vqU000p2zPjLlX"
STRIPE_SECRET_KEY="sk_test_51RESrhQ5AgnjVXhKWjQIAcCZK1Npx6T1rHeGv8uJxtw2E4PF8G2s9wTMIwHP52PRs23zeXBbn5krca5bExyYR2T600Ic9CYrRX"
STRIPE_WEBHOOK_SECRET="whsec_..." # Get this after creating webhook endpoint in Stripe dashboard
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY} # Expose publishable key to client
NEXT_PUBLIC_APP_URL="http://localhost:3000" # Or your production URL
 